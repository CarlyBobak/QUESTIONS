[{"path":"https://carlybobak.github.io/QUESTIONS/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Carly Bobak Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carly Bobak. Author, maintainer.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bobak C (2025). QUESTIONS: QUESTIONS: Quantifying Expression Spillover Trajectories Omic Network Series. R package version 0.1.0, https://github.com/CarlyBobak/QUESTIONS.","code":"@Manual{,   title = {QUESTIONS: QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series},   author = {Carly Bobak},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/CarlyBobak/QUESTIONS}, }"},{"path":"https://carlybobak.github.io/QUESTIONS/index.html","id":"questions","dir":"","previous_headings":"","what":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","title":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","text":"QUESTIONS (Quantifying Expression Spillover Trajectories Omic Network Series) R package modeling upstream gene signals propagate time-ordered biological networks ‚Äî especially derived WGCNA coexpression analyses. QUESTIONS extends spillover propagation framework help researchers quantify biological influence shifts time, identify key signal-carrying modules, interpret dynamic omics data network-level context.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","text":"Spillover modeling initiator genes neighbors Timecourse analysis across list network snapshots Network pruning via thresholds top-k neighbors Spillover thresholding informed network structure Sample-level scoring based spillover-weighted expression Module-level summaries across timepoints Native support sparse matrices WGCNA objects","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","text":"Install development version QUESTIONS GitHub pak:","code":"# install.packages(\"pak\") pak::pak(\"CarlyBobak/QUESTIONS\")"},{"path":"https://carlybobak.github.io/QUESTIONS/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic Example","title":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","text":"compute spillover: Create similarity matrix (e.g., TOM adjacency matrix). Choose one initiator genes seed propagation. Compute spillover using calculate_spillover() optional pruning normalization. Interpret summarize results gene, sample, module level. example, might start 2√ó2 matrix gene similarity values, initialize spillover one gene, observe signal distributes across network. Larger networks timecourse inputs can handled using spillover_timecourse(). Sample- module-level summaries can generated using summarize_spillover_per_sample() summarize_spillover_by_sample_and_module().","code":"library(QUESTIONS) library(Matrix)  mat <- Matrix(c(1, 0.3, 0.3, 1), nrow = 2, sparse = TRUE) rownames(mat) <- colnames(mat) <- c(\"Gene1\", \"Gene2\")  calculate_spillover(   network = mat,   initiator_genes = \"Gene1\",   alpha = 0.9 )"},{"path":"https://carlybobak.github.io/QUESTIONS/index.html","id":"id_-citation","dir":"","previous_headings":"","what":"üñã Citation","title":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","text":"use package, please cite: Carly Bobak (2025).QUESTIONS: Quantifying Expression Spillover Trajectories Omic Network Series. R package version 0.1.0.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/index.html","id":"author--development","dir":"","previous_headings":"","what":"Author & Development","title":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","text":"Developed Carly Bobak Research Computing Data, Jaini Shah, James O‚ÄôMalley Dartmouth Institute Dartmouth College support time-resolved network-informed omics analysis. Questions contributions welcome via GitHub Issues.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series","text":"MIT License ¬© 2025 Carly Bobak","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/QUESTIONS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"QUESTIONS: QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series ‚Äî QUESTIONS-package","title":"QUESTIONS: QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series ‚Äî QUESTIONS-package","text":"QUESTIONS (Quantifying Expression Spillover Trajectories Omic Network Series) R package modeling signal propagation dynamic biological networks, particularly derived WGCNA. extends spillover framework support timecourse analyses, pruning dense network matrices, interpretation gene- module-level influence across conditions. QUESTIONS includes tools pruning, row normalization, dynamic thresholding, per-sample spillover scoring support network-based interpretation omics data.","code":""},{"path":[]},{"path":"https://carlybobak.github.io/QUESTIONS/reference/QUESTIONS-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"QUESTIONS: QUESTIONS: Quantifying Expression Spillover Trajectories in Omic Network Series ‚Äî QUESTIONS-package","text":"Maintainer: Carly Bobak -email@dartmouth.edu","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/calculate_spillover.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate gene-level spillover from time 1 to time 2 ‚Äî calculate_spillover","title":"Calculate gene-level spillover from time 1 to time 2 ‚Äî calculate_spillover","text":"function estimates spillover effects set initiator genes (optional initial effects) using transition matrix derived TOM matrix, adjacency matrix, WGCNA object. Optionally, network matrix can pruned remove weak noisy connections using either threshold top-k filtering strategy.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/calculate_spillover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate gene-level spillover from time 1 to time 2 ‚Äî calculate_spillover","text":"","code":"calculate_spillover(   network,   initiator_genes,   gene_effects = NULL,   alpha = 1,   row_normalize = FALSE,   prune = FALSE,   prune_args = list(value = NULL, auto = TRUE, target_sparsity = 0.05) )"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/calculate_spillover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate gene-level spillover from time 1 to time 2 ‚Äî calculate_spillover","text":"network adjacency matrix, TOM matrix, WGCNA result object (list `TOM`, `adjacency`, `datExpr`). initiator_genes vector gene names initialize spillover . Can represent hub genes, biomarkers, etc. gene_effects Optional named numeric vector effect sizes (e.g., logFC median shift) initiators. Default = 1. alpha Damping parameter controlling conservation original signal (default = 1). Set 0 (propagation) 1 (full propagation). row_normalize Logical. Whether row-wise normalize matrix computing spillover values. (default = TRUE). prune Logical. Whether prune network matrix computing spillover (default = FALSE). prune_args named list arguments passed `prune_matrix()`, `value`, `auto`, `target_sparsity`. #' @details **Spillover Calculation Interpretation** function estimates gene-level *spillover*, representing indirect influence upstream initiator genes propagated gene similarity network (e.g., adjacency TOM matrix). propagation follows dampened diffusion model: $$   \\text{spillover} = \\alpha \\cdot W \\cdot \\text{initial\\_effects} + (1 - \\alpha) \\cdot \\text{initial\\_effects} $$ : - \\(W\\) (optionally normalized) similarity transition matrix, - \\(\\text{initial\\_effects}\\) vector user-specified gene-level initiator values (default = 1), - \\(\\alpha\\) damping parameter controls much signal allowed propagate versus retained. output named numeric vector spillover scores gene, reflecting degree gene influenced initiators, either directly (initiator ) indirectly connected neighbors network. - Higher spillover values indicate greater expected influence initiator genes. - `row_normalize = TRUE`, row matrix \\(W\\) scaled sum 1, making spillover   interpretable probabilistic distribution influence across neighbors. - `alpha = 1`, indirect signal retained; lower alpha retains direct signal. **Interpretation Notes:** - pruning enabled, weak connections removed computing spillover. can sharpen signal   improve interpretability may reduce sensitivity diffuse propagation. - Raw spillover values continuous, follow-steps can apply thresholds binarization select   genes biologically meaningful levels inferred influence. function serves core engine timecourse analyses (see `spillover_timecourse()`) downstream integration expression phenotype data.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/calculate_spillover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate gene-level spillover from time 1 to time 2 ‚Äî calculate_spillover","text":"named numeric vector spillover scores time 2 genes network.","code":""},{"path":[]},{"path":"https://carlybobak.github.io/QUESTIONS/reference/calculate_spillover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate gene-level spillover from time 1 to time 2 ‚Äî calculate_spillover","text":"","code":"if (FALSE) { # \\dontrun{ spillover <- calculate_spillover(   network = tom_matrix,   initiator_genes = hub_genes,   alpha = 0.85,   prune = TRUE,   prune_args = list(method = \"threshold\", auto = TRUE, target_sparsity = 0.05) ) } # }"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/coerce_to_dgCMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce a matrix to sparse dgCMatrix format ‚Äî coerce_to_dgCMatrix","title":"Coerce a matrix to sparse dgCMatrix format ‚Äî coerce_to_dgCMatrix","text":"Converts input matrix general compressed sparse column matrix (dgCMatrix), special handling symmetric sparse matrices.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/coerce_to_dgCMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce a matrix to sparse dgCMatrix format ‚Äî coerce_to_dgCMatrix","text":"","code":"coerce_to_dgCMatrix(W)"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/coerce_to_dgCMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce a matrix to sparse dgCMatrix format ‚Äî coerce_to_dgCMatrix","text":"W base matrix, Matrix, symmetric sparse matrix (e.g., dsCMatrix).","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/coerce_to_dgCMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce a matrix to sparse dgCMatrix format ‚Äî coerce_to_dgCMatrix","text":"`dgCMatrix` object.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/extract_network_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a matrix from a network input ‚Äî extract_network_matrix","title":"Extract a matrix from a network input ‚Äî extract_network_matrix","text":"function handles network object may raw matrix, sparse matrix, WGCNA result list containing `TOM` `adjacency`. extracts appropriate matrix downstream use.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/extract_network_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a matrix from a network input ‚Äî extract_network_matrix","text":"","code":"extract_network_matrix(network)"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/extract_network_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a matrix from a network input ‚Äî extract_network_matrix","text":"network matrix, sparse Matrix, list WGCNA `TOM` `adjacency`.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/extract_network_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a matrix from a network input ‚Äî extract_network_matrix","text":"base sparse matrix suitable analysis.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/is_row_normalized.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a sparse matrix is row-normalized ‚Äî is_row_normalized","title":"Check if a sparse matrix is row-normalized ‚Äî is_row_normalized","text":"function checks whether row sparse matrix sums 1, within specified numeric tolerance. useful confirming matrix suitable diffusion spillover operations.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/is_row_normalized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a sparse matrix is row-normalized ‚Äî is_row_normalized","text":"","code":"is_row_normalized(W, tolerance = 1e-06, verbose = TRUE)"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/is_row_normalized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a sparse matrix is row-normalized ‚Äî is_row_normalized","text":"W sparse matrix class `dgCMatrix`. tolerance Numeric. Acceptable deviation 1 row sum (default = 1e-6). verbose Logical. TRUE, prints number rows failing check.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/is_row_normalized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a sparse matrix is row-normalized ‚Äî is_row_normalized","text":"Logical. TRUE rows sum 1 within specified tolerance, FALSE otherwise.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/is_row_normalized.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a sparse matrix is row-normalized ‚Äî is_row_normalized","text":"","code":"if (FALSE) { # \\dontrun{ is_row_normalized(W) } # }"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/normalize_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Row-wise normalize a sparse matrix ‚Äî normalize_rows","title":"Row-wise normalize a sparse matrix ‚Äî normalize_rows","text":"function normalizes row sparse matrix row sums 1. often required diffusion spillover modeling create row-stochastic matrix.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/normalize_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row-wise normalize a sparse matrix ‚Äî normalize_rows","text":"","code":"normalize_rows(W, verbose = TRUE)"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/normalize_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row-wise normalize a sparse matrix ‚Äî normalize_rows","text":"W sparse matrix class `dgCMatrix`, typically adjacency TOM matrix. verbose Logical. TRUE, prints number rows corrected (.e., sum zero).","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/normalize_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row-wise normalize a sparse matrix ‚Äî normalize_rows","text":"row-normalized sparse matrix dimensions class.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/normalize_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Row-wise normalize a sparse matrix ‚Äî normalize_rows","text":"row sum zero (.e., disconnected node), function replaces diagonal entry row 1, effectively preserving identity avoiding division zero.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/normalize_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Row-wise normalize a sparse matrix ‚Äî normalize_rows","text":"","code":"if (FALSE) { # \\dontrun{ W_norm <- normalize_rows(W) } # }"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/prune_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune a similarity matrix (TOM or adjacency) to enhance sparsity ‚Äî prune_matrix","title":"Prune a similarity matrix (TOM or adjacency) to enhance sparsity ‚Äî prune_matrix","text":"Supports thresholding top-k nearest neighbors reduce matrix density, improving interpretability biological signal diffusion tasks.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/prune_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune a similarity matrix (TOM or adjacency) to enhance sparsity ‚Äî prune_matrix","text":"","code":"prune_matrix(   mat,   value = NULL,   auto = FALSE,   target_sparsity = 0.05,   verbose = TRUE )"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/prune_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune a similarity matrix (TOM or adjacency) to enhance sparsity ‚Äî prune_matrix","text":"mat square similarity matrix (e.g., TOM adjacency) value numeric threshold (method = \"threshold\") number neighbors (method = \"topk\") auto TRUE, determine threshold automatically achieve target sparsity target_sparsity Desired sparsity level (used auto = TRUE method = \"threshold\") verbose TRUE, prints pruning diagnostics","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/prune_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prune a similarity matrix (TOM or adjacency) to enhance sparsity ‚Äî prune_matrix","text":"pruned matrix zeroed weak connections","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_threshold_from_degree.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a degree-aware spillover threshold for row-normalized networks ‚Äî spillover_threshold_from_degree","title":"Calculate a degree-aware spillover threshold for row-normalized networks ‚Äî spillover_threshold_from_degree","text":"function estimates network-specific threshold spillover activation, based expected signal node receive random initiator sets. uses assumption , row-normalized matrix, initiators distribute 1 unit signal across neighbors, thus expected spillover proportional degree (number connections) node.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_threshold_from_degree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a degree-aware spillover threshold for row-normalized networks ‚Äî spillover_threshold_from_degree","text":"","code":"spillover_threshold_from_degree(   W,   quantile = 0.95,   verbose = TRUE,   tolerance = 1e-06 )"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_threshold_from_degree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a degree-aware spillover threshold for row-normalized networks ‚Äî spillover_threshold_from_degree","text":"W row-normalized sparse network matrix class `dgCMatrix`, rows columns matching gene names. quantile Numeric value 0 1 (default = 0.95). threshold set quantile expected background distribution. verbose Logical. TRUE, prints computed threshold quantile information. tolerance Numeric tolerance row-sum deviation (default = 1e-6).","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_threshold_from_degree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a degree-aware spillover threshold for row-normalized networks ‚Äî spillover_threshold_from_degree","text":"single numeric value representing recommended spillover threshold.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_threshold_from_degree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a degree-aware spillover threshold for row-normalized networks ‚Äî spillover_threshold_from_degree","text":"threshold can used distinguish spillover values exceed expected random signal diffusion alone, intended use row-normalized sparse adjacency TOM matrices.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_threshold_from_degree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a degree-aware spillover threshold for row-normalized networks ‚Äî spillover_threshold_from_degree","text":"","code":"if (FALSE) { # \\dontrun{ threshold <- spillover_threshold_from_degree(W = my_network, quantile = 0.95) spill_binary <- ifelse(spillover > threshold, 1, 0) } # }"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_timecourse.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate timecourse spillover across multiple networks ‚Äî spillover_timecourse","title":"Calculate timecourse spillover across multiple networks ‚Äî spillover_timecourse","text":"function iteratively computes gene-level spillover across series networks (e.g., WGCNA results TOM/adjacency matrices), using propagation model. Spillover can begin shared initiator list timepoint-specific gene sets optionally incorporate gene-level effects fold changes module membership. Propagation can binary continuous, supports persistent initiators feedback previous spillover states. function also supports optional pruning dense networks using similarity threshold top-k strongest connections per row.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_timecourse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate timecourse spillover across multiple networks ‚Äî spillover_timecourse","text":"","code":"spillover_timecourse(   network_list,   initiator_genes,   gene_effects = NULL,   alpha = 1,   row_normalize = TRUE,   binary = FALSE,   threshold_spillover = FALSE,   threshold = NULL,   calc_threshold = FALSE,   quantile = 0.95,   persistent_initiators = FALSE,   use_previous_spillover = FALSE,   prune = FALSE,   prune_args = list(auto = FALSE, target_sparsity = 0.05),   verbose = TRUE )"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_timecourse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate timecourse spillover across multiple networks ‚Äî spillover_timecourse","text":"network_list named list networks (matrices WGCNA result objects), one per timepoint (T2 Tn). initiator_genes Either character vector shared initiators list vectors, one per timepoint (T1 Tn-1). gene_effects Optional: either named numeric vector gene effects (e.g., logFCs) list vectors per timepoint. provided, defaults 1 initiators 0 otherwise. alpha Numeric. Damping parameter controlling signal retention (default = 1). Set 0 (propagation) 1 (full propagation). row_normalize Logical. Whether row-wise normalize matrix computing spillover values. (default = TRUE). binary Logical. TRUE, converts output timepoint binary using threshold (default = TRUE). threshold_spillover Logical. TRUE spillove values threshold retained (defualt = FALSE). threshold Numeric. Used `binary = TRUE` `threshold_spillover = TRUE` define activation cutoff (default = 0). calc_threshold Logical. TRUE, uses spillover_threshold_from_degree calculate topology informed threshold significant spillover. quantile Numeric. Value 0 1 (default = 0.95). spilllover threshold set quantile expected background distribution. persistent_initiators Logical. TRUE, initiators accumulate time remain active first activation (default = FALSE). use_previous_spillover Logical. TRUE, uses spillover output previous timepoint gene effects next timepoint (default = FALSE). prune Logical. Whether prune network matrix computing spillover (default = FALSE). prune_args named list arguments passed `prune_matrix()`, `method`, `value`, `auto`, `target_sparsity`. verbose Logical. TRUE, prints diagnostic progress messages (default = TRUE). #' @details **Overview Interpretation** function generalizes single-step spillover propagation entire *timecourse* network states, allowing users track influence initial set genes evolves across multiple biological snapshots (e.g., timepoints, conditions). timepoint, spillover calculated using following damped propagation model: $$   \\text{spillover}_{t} = \\alpha \\cdot W_{t} \\cdot \\text{effects}_{t} + (1 - \\alpha) \\cdot \\text{effects}_{t} $$ : - \\(W_{t}\\) network matrix timepoint \\(t\\), optionally pruned row-normalized, - \\(\\text{effects}_{t}\\) gene-level effect vector derived initiators previous spillover state, - \\(\\alpha\\) controls much signal propagates vs. remains locally conserved. **Options Flexibility** - **Initiator Genes**: function supports either single set initiators list per-timepoint variation. - **Persistent Initiators**: enabled, genes active prior step remain active subsequent ones. - **Previous Spillover Input**: Allows dynamic feedback, spillover \\(t-1\\) seeds effects \\(t\\). - **Thresholding**: Optional filtering weak spillover using either fixed numeric cutoff topology-aware quantile threshold `spillover_threshold_from_degree()`. - **Binary Conversion**: enabled, spillover values binarized (1/0) reflect activation status, useful logic-based modeling visualization. - **Pruning**: Supports automatic manual reduction network density enhance signal--noise speed. **Interpretation Guidance** - Raw spillover scores reflect accumulated influence initiators gene timepoint. - scores can used identify genes consistently accumulate signal, detect pathway shifts, correlate phenotypic changes. - Thresholding binarization helpful inferring discrete activation tracing modules step--step. - Use `spillover_threshold_from_degree()` principled cutoffs based network structure, especially row-normalized matrices. function particularly well-suited longitudinal studies (e.g., developmental timecourses, intervention responses), spillover-based diffusion reveals shifting patterns gene influence across network's evolving topology.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/spillover_timecourse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate timecourse spillover across multiple networks ‚Äî spillover_timecourse","text":"named list spillover vectors (named numeric vectors) timepoint input list.","code":""},{"path":[]},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_by_sample_and_module.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize sample-level spillover per module across a timecourse ‚Äî summarize_spillover_by_sample_and_module","title":"Summarize sample-level spillover per module across a timecourse ‚Äî summarize_spillover_by_sample_and_module","text":"function calculates spillover summary score sample, grouped gene module, across timecourse expression matrices spillover vectors. supports optional absolute-value transformation expression z-score normalization final result.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_by_sample_and_module.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize sample-level spillover per module across a timecourse ‚Äî summarize_spillover_by_sample_and_module","text":"","code":"summarize_spillover_by_sample_and_module(   expr_list,   spillover_list,   module_membership_list,   summary_func = NULL,   genes_in_rows = FALSE,   abs_expression = FALSE,   normalize_scores = FALSE,   verbose = TRUE )"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_by_sample_and_module.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize sample-level spillover per module across a timecourse ‚Äî summarize_spillover_by_sample_and_module","text":"expr_list list gene expression matrices, one per timepoint (samples √ó genes). Must order `spillover_list`. spillover_list list named numeric vectors spillover scores, one per timepoint. Names must match gene names expression module inputs. module_membership_list list named vectors mapping genes modules (character factor), one per timepoint. summary_func Optional. function compute summary statistic (default = sum(expr √ó spillover)). function must accept two numeric vectors: expression spillover. genes_in_rows Logical. TRUE rows genes columns samples (default = FALSE). abs_expression Logical. TRUE, take absolute value expression applying `summary_func` (default = FALSE). normalize_scores Logical. TRUE, z-score standardize spillover scores across samples (per module) (default = FALSE). verbose Logical. TRUE, print progress messages (default = TRUE).","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_by_sample_and_module.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize sample-level spillover per module across a timecourse ‚Äî summarize_spillover_by_sample_and_module","text":"list data frames, one per timepoint. data frame samples √ó modules, spillover summary scores.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_by_sample_and_module.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize sample-level spillover per module across a timecourse ‚Äî summarize_spillover_by_sample_and_module","text":"enables downstream analyses : - Tracing module-specific signal propagates time - Associating spillover magnitude phenotypes - Contrasting signal distribution across modules samples **Interpreting Spillover Summary Values** function calculates summary score sample reflects *weighted influence* genes receiving spillover signal, aggregated within module. default score computed : $$   \\text{score}_{} = \\sum_{g \\M_i} \\text{expression}_{sg} \\times \\text{spillover}_g $$ : - \\(M_i\\) set genes module ** - \\(\\text{expression}_{sg}\\) expression gene *g* sample *s* - \\(\\text{spillover}_g\\) spillover score assigned gene *g* timepoint result reflects strongly sample expresses genes targeted spillover, thus may indicate whether biological effects upstream perturbation active sample. **Z-score Option (`normalize_scores = TRUE`):** enabled, scores standardized *per module* (.e., column-wise) across samples: $$   Z_{} = \\frac{\\text{score}_{} - \\mu_i}{\\sigma_i} $$ \\(\\mu_i\\) \\(\\sigma_i\\) mean standard deviation scores module ** across samples. Z-scoring useful comparing modules different dynamic ranges, integrating scores across timepoints. **Absolute Expression Option (`abs_expression = TRUE`):** option set, gene expression values converted absolute values weighting. can help avoid cancellation effects expression matrix centered includes negative values (e.g., z-scores residuals). Use option biological interpretation expression directional (e.g., presence/absence) rather fold-change.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_by_sample_and_module.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize sample-level spillover per module across a timecourse ‚Äî summarize_spillover_by_sample_and_module","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage with z-score module_scores <- summarize_spillover_by_sample_and_module(expr_list, spillover_list, module_list,                    normalize_scores = TRUE)  # Use absolute expression with custom summary module_scores <- summarize_spillover_by_sample_and_module(expr_list, spillover_list, module_list,                    abs_expression = TRUE,                    summary_func = function(expr, spill) mean(expr * spill)) } # }"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_per_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sample-level spillover summary scores ‚Äî summarize_spillover_per_sample","title":"Compute sample-level spillover summary scores ‚Äî summarize_spillover_per_sample","text":"Aggregates expression data using gene-level spillover weights. Accepts either single matrix/vector lists timecourse-style analysis (e.g., paired `spillover_timecourse()`).","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_per_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sample-level spillover summary scores ‚Äî summarize_spillover_per_sample","text":"","code":"summarize_spillover_per_sample(   expr,   spillover,   summary_fn = NULL,   normalize_scores = FALSE,   genes_in_rows = FALSE,   abs_expression = FALSE,   verbose = TRUE )"},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_per_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute sample-level spillover summary scores ‚Äî summarize_spillover_per_sample","text":"expr Either matrix/data.frame (genes √ó samples) list matrices. spillover Either named numeric vector spillover scores list vectors. summary_fn Optional custom function: takes two arguments (expr, spillover) returns scalar. Default weighted sum expr √ó spillover. normalize_scores Logical. Whether normalize spillover scores (ie return spillover Z scores) (default = FALSE). genes_in_rows Logical. TRUE rows genes columns samples (default = FALSE). abs_expression Logical. TRUE, take absolute value expression summarizing (default = FALSE). verbose Logical. Whether print progress diagnostics (default = TRUE). #' @details **Interpreting Per-Sample Spillover Scores** function computes summary score sample, reflecting strongly sample expresses genes influenced network-based spillover upstream signals (e.g., hub genes initiators). default scoring function calculates weighted sum: $$   \\text{score}_s = \\sum_{g \\G} \\text{expression}_{gs} \\times \\text{spillover}_g $$ : - \\(G\\) set genes non-zero spillover - \\(\\text{expression}_{gs}\\) expression gene *g* sample *s* - \\(\\text{spillover}_g\\) spillover score assigned gene *g* timepoint score can interpreted degree sample expresses genes received signal via network propagation. Higher values suggest stronger manifestation upstream network activity. **Z-score Option (`normalize_samples = TRUE`):** enabled, resulting spillover scores standardized across samples: $$   Z_s = \\frac{\\text{score}_s - \\mu}{\\sigma} $$ \\(\\mu\\) \\(\\sigma\\) mean standard deviation spillover scores across samples. Z-scores useful comparing samples across different datasets timepoints, integrating predictors. **Absolute Expression Option (`abs_expression = TRUE`):** flag takes absolute value expression values applying spillover weights. helps avoid signal cancellation expression data centered, scaled, otherwise contains negative values. especially useful presence magnitude expression interest, rather direction.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_per_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute sample-level spillover summary scores ‚Äî summarize_spillover_per_sample","text":"named numeric vector (single input) named list per-timepoint score vectors.","code":""},{"path":"https://carlybobak.github.io/QUESTIONS/reference/summarize_spillover_per_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute sample-level spillover summary scores ‚Äî summarize_spillover_per_sample","text":"","code":"if (FALSE) { # \\dontrun{ # Single timepoint scores <- summarize_spillover_per_sample(expr, spillover_vec)  # Timecourse scores_list <- summarize_spillover_per_sample(expr_list, spillover_list) } # }"}]
